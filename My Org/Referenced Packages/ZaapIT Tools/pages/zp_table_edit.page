<apex:page standardController="zaapit__zaapit_editable_table2__c" showHeader="false" sidebar="false"
 extensions="zaapit.zp_table_edit,zaapit.JSZTableAction" id="pgMain">
 <script>
 var remoteQueryAjax2SC='{!$RemoteAction.JSZTableAction.queryAjax2SC}';
 </script>  
<div id="loadingx1Anchor"><div id="loadingx1" class="hd1"></div></div>
   <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/themes/redmond/jquery-ui.css" type="text/css"/>
 
     <apex:form id="pageBLK">
<script type="text/javascript" src="{!$Resource.zp_jquery172}"></script>
 <script type="text/javascript" src="{!$Resource.zp_jqueryui_1820}"></script> 
 <script>
  var lastFFix=null;
 function fieldsFix(){
 	var res=false;
    var newFields=new Array();
    $("#ss1F1 input[name='selectedFieldsStrX']").each(function(){
        newFields.push($(this).val());
    });
    var temp1=newFields.join("#");
    //alert(temp1);
    $(".fieldsINPUT").val(temp1);
    if($.trim(temp1)==""){
    	res=false;
    	$("#ss1F1").css({border:"3px solid red"});
    	alert("Please select at least one field for your table.");
		//$('html, body').animate({ scrollTop: $('#ss1F1').offset().top-50 }, 'fast');
    	//$("#ss1F1").animate({border:"1px solid #D5D5D5;"},slow);
    }else{
    	res=true;
    }
    return res;
 }
 
 
  $(document).ready(function() {
  	sortDeFrance("ff1F1");
  	sortDeFrance("ff1F1");
  	sortPDTl();
  //$("form").submit(function(){
  //  return fieldsFix();
  //});
 // alert("aaaa"+$( "#ff1F1" ).size());

$( ".connectedSortable" ).sortable({
connectWith: ".connectedSortable"
,cancel: ".ui-state-disabled"

}).disableSelection();
});
/*,placeholder: "ui-state-highlight"*/


          function closeWinAndRefresh(){
              
              parent.postMessage('$("#customizeViewx1").dialog( "close" );if(!isInIframe()){ refreshAfterSave(); }else{ refershForParent();}/*refresh for zaapit_tb_*/','{!openerURL}');
             
     }

function loadingSH(){
    $("#loadingx1").fadeTo("fast",0.5);
    $("#loadingx1").width($("body").width());
    $("#loadingx1").height($("body").height());
    $("#loadingx1").show();
}
function fixonload(){
$("#loadingx1").hide();
}

function appendToFieldVal(obj,destClStr){
var tmp=$("."+destClStr).val();
$("."+destClStr).val((tmp==""?"":tmp+" AND ")+$("."+obj).val());
}

function testQueryx1(destClStr,submitMode){//check syntax
if(!fieldsFix()){
	return false;
}
var tmp=$("."+destClStr).val();

var query1="";

tmp=$.trim(tmp);
if(tmp!=""){
tmp=tmp.replace(/\{UserInfo\.UserId\}/g,"'{!$User.Id}'");
tmp=tmp.replace(/\{UserInfo\.ProfileId\}/g,"'{!$Profile.Id}'");

 query1="SELECT id FROM {!zaapit__zaapit_editable_table2__c.zaapit__table__c} where "+tmp+" limit 1";
 Visualforce.remoting.Manager.invokeAction(
                remoteQueryAjax2SC,
                query1, 
                function(result, event){
                    if (event.status && result!=null) {
    
                        if(submitMode!=null){
                            loadingSH();
                            save1();
                        }else{
                            alert("Your syntax is ok");
                        }
                     } else if (event.type === 'exception') {
                        alert("Please revise your 'Extra Condition Filter': \n\nTest Query: "+query1+" \n\nThe Error:\n"+event.message);
                    } else {
                        alert("Please revise your 'Extra Condition Filter': \n\nTest Query: "+query1);
                    }
                }, 
                {escape: true}
            );
}else{
if(submitMode!=null){
        loadingSH();
        save1();
    }else{
        alert("Your syntax is ok");
    }
}

}

function tableChanged1(){
    if(navigator.userAgent.indexOf('MSIE 8')>-1){
        loadingSH();
        $('.chngTb1').click();
    }else{
        loadingSH();
        tableChanged();
    }
}

function moveElements(fromId,toId){
	$('#'+toId).append($('#'+fromId+' li'));
	sortDeFrance(toId);
}

function sortDeFrance(idX){
	var sorted = $.makeArray($('#'+idX+' li')).sort(function(a,b){
	return ($.trim($(a).text().toLowerCase()) < $.trim($(b).text().toLowerCase())) ? -1 : 1;
	});
	$('#'+idX).html(sorted);
	
}
function sortPDTl(){
	var oldVal=$(".tablesSel").val();
	var sorted = $.makeArray($(".tablesSel option")).sort(function(a,b){
	return ($.trim($(a).text().toLowerCase()) < $.trim($(b).text().toLowerCase())) ? -1 : 1;
	});
	$(".tablesSel").html(sorted);
	$(".tablesSel").val(oldVal);
}

 </script>
 
 
  <style>
  .hd1{display:none;}
.connectedSortable {padding:3px;border:1px solid #d5d5d5;height:130px;width:230px;overflow-y:auto;overflow-x:hidden;list-style-type: none; margin: 0; }
.connectedSortable li { margin: 0 5px 5px 5px; padding: 3px; font-size: 8pt; width: 189px;cursor:move;}
.connectedSortable li.ui-state-disabled{ opacity: 1.0; color:#555555;cursor:default;}
.iconILB{display:inline-block;vertical-align:-3px;}
#loadingx1Anchor{position:relative;}
#loadingx1{z-index:3;position:absolute;background-color:#E5E5E5;}
</style>
    <apex:pageBlock title="Customize View" mode="edit" rendered="{!NOT(isDone)}"  id="pgBlock1">
      <apex:pageBlockButtons >
      
        <apex:commandButton value="Save"  onclick="testQueryx1('RLRF-TA','1');return false;"/>
        <apex:commandButton onclick="closeWinAndRefresh();return false;" value="Cancel"/>
        <apex:commandButton action="{!tableChanged}" value="change table" styleClass="hd1 chngTb1"/>
      </apex:pageBlockButtons>
      <apex:pageMessages id="mainTB1Err"/>
      <apex:pageBlockSection title="Basic Settings" columns="2">
         <apex:outputField value="{!zaapit__zaapit_editable_table2__c.name}"/>
         <apex:inputText label="Page Title" value="{!zaapit__zaapit_editable_table2__c.zaapit__title__c}" size="100" style="width:220px" required="true"/>
        
         <apex:selectList value="{!zaapit__zaapit_editable_table2__c.zaapit__table__c}" multiselect="false" size="1" label="Table for Object"  onchange="tableChanged1();" styleClass="tablesSel">
            <apex:selectOptions value="{!availTable}"/>
            </apex:selectList>
            
            </apex:pageBlockSection>
            
            <apex:pageBlockSection title="Fields Selection" columns="1" id="FieldSelection1"></apex:pageBlockSection>
      
        <div>
        
        
<script>

function searchAvil(str){
$("#ff1F1 li").each(function(){
    if(($(this).text()+"").toLowerCase().indexOf(str.toLowerCase())>-1){
        $(this).show();        
    }else{
        $(this).hide();
    }    
});
}

function searchSelec(str){
$("#ss1F1 li").each(function(){
    if(($(this).text()+"").toLowerCase().indexOf(str.toLowerCase())>-1){
        $(this).show();        
    }else{
        $(this).hide();
    }    
});
}


</script>
        <table>
        <thead>
        <tr>
        <td align="center"><c:SearchInput searchFieldID="1" width="160" Search_label="Search Available Fields" onchangeFunction="searchAvil" waitMilis="550"/></td>
        <td></td>
        <td align="center"><c:SearchInput searchFieldID="2" width="160" Search_label="Search Selected Fields" onchangeFunction="searchSelec" waitMilis="550"/></td>
        </tr>
        </thead>
       <tbody> 
         <tr>
         
        <td><ul id="ff1F1" class="connectedSortable">
         <apex:repeat value="{!availFieldsStr}" var="f1" id="s11">
            <li class="ui-state-default" val="{!f1[0]}">
            <span title="Apex Field: {!f1[0]}">
             <apex:outputText value="{!f1[1]}" id="theValue"/>
             <input type="hidden" name="selectedFieldsStrX" value="{!f1[0]}"/>
             </span>
            </li>
         </apex:repeat>
         </ul></td>
        <td align="center">
        <span class="ui-icon ui-icon-arrowthick-2-e-w"></span><br/>
        <button title="Move all to the right" type="button" onclick="moveElements('ff1F1', 'ss1F1');" class="btn" style="margin-bottom:10px">&gt;&gt;</button><br/>
        <button title="Move all to the left" type="button" onclick="moveElements('ss1F1','ff1F1');" class="btn">&lt;&lt;</button>
        </td>
        <td><ul id="ss1F1" class="connectedSortable"> 
         <apex:repeat value="{!selectedFieldsStr}" var="f1" id="f11">
            <li class="ui-state-default {!IF(f1[1]=='E','ui-state-disabled','')}" val="{!f1[0]}"> 
             <span title="Apex Field: {!f1[0]}">
              <apex:outputText value="{!IF(f1[1]=='E',f1[0],f1[1])}" id="theValue"/>
             <input type="hidden" name="selectedFieldsStrX" value="{!f1[0]}"/>
            
             <span class="{!IF(f1[1]=='E','ui-icon-locked ui-icon iconILB','')}"></span>
             
             </span>
            </li>
         </apex:repeat>
         </ul></td>
        </tr>
        </tbody>
        </table>
        <div style="margin:5px 5px 5px 15px;font-size:8pt;font-weight:bold;color:#555555;">* Drag and drop the above fields to select the table fields - sorting counts.</div> 
        <apex:inputText value="{!fieldsStr}" styleClass="fieldsINPUT hd1"/>
        
        </div>
         <apex:pageBlockSection title="Sort Settings" columns="2" id="FieldSelection" >
         
        <apex:selectList label="Sort by Field #1" value="{!zaapit__zaapit_editable_table2__c.zaapit__sortBy__c}" size="1" required="true">
        <apex:selectOptions value="{!availFieldsSort}"/>
        </apex:selectList>
        
         <apex:selectList label="Sort by Direction" value="{!zaapit__zaapit_editable_table2__c.zaapit__sortDir__c}" size="1" >
         <apex:selectOption itemValue="asc" itemLabel="Ascending"/>
         <apex:selectOption itemValue="desc" itemLabel="Descending"/>
         </apex:selectList>
      
       
       <apex:selectList label="Sort by Field #2" value="{!zaapit__zaapit_editable_table2__c.zaapit__sortBy2__c}" size="1" >
        <apex:selectOption itemValue=" " itemLabel="Please Select"/>
        <apex:selectOptions value="{!availFieldsSort}"/>
        </apex:selectList>
        
         <apex:selectList label="Sort by Direction" value="{!zaapit__zaapit_editable_table2__c.zaapit__sortDir2__c}" size="1" >
         <apex:selectOption itemValue="asc" itemLabel="Ascending"/>
         <apex:selectOption itemValue="desc" itemLabel="Descending"/>
         </apex:selectList>
         
         
         <apex:selectList label="Sort by Field #3" value="{!zaapit__zaapit_editable_table2__c.zaapit__SortBy3__c}" size="1" >
          <apex:selectOption itemValue=" " itemLabel="Please Select"/>
        <apex:selectOptions value="{!availFieldsSort}"/>
        </apex:selectList>
        
         <apex:selectList label="Sort by Direction" value="{!zaapit__zaapit_editable_table2__c.zaapit__sortDir3__c}" size="1" >
         <apex:selectOption itemValue="asc" itemLabel="Ascending"/>
         <apex:selectOption itemValue="desc" itemLabel="Descending"/>
         </apex:selectList>
       
         
     </apex:pageBlockSection>
     <apex:pageBlockSection title="Custom Buttons" columns="2" id="CustomButton" >
        <apex:repeat value="{!buttons}"  var="btn">
        
            <apex:inputtext label="Button Name" value="{!btn.key}"  />
            <apex:inputtext label="Button Link / JS" value="{!btn.val}"  />
      </apex:repeat>
                
     </apex:pageBlockSection>
        
        <div style="color:#999999;font-size:8pt;margin-bottom:10px;">All the above buttons support a Link or a short javascript. 
         Use "{ID}" on related list to get the parent Object ID.<br/>
         Examples: /example_page?id={ID}, http://www.salesforce.com , alert("CurrentID={ID}");return false; (return false to stop submit)
          
         </div>
         
    <style>
    #advenaceSettings table>thead>tr>th {white-space:normal;}
    </style>
     <div id="advenaceSettings">
     <apex:pageBlockSection title="Advanced Settings" columns="2">     
      <apex:selectList value="{!zaapit__zaapit_editable_table2__c.zaapit__maxRowsPerPage__c}" size="1" label="Rows Per Page - Defualt">
         <apex:selectOption itemValue="10" itemLabel="10"/>
         <apex:selectOption itemValue="25" itemLabel="25"/>
         <apex:selectOption itemValue="50" itemLabel="50"/>
         <apex:selectOption itemValue="100" itemLabel="100"/>
         <apex:selectOption itemValue="200" itemLabel="200"/>
         <apex:selectOption itemValue="500" itemLabel="500"/>
         <apex:selectOption itemValue="5000" itemLabel="5000"/>
         
         </apex:selectList>
         
         <apex:inputField label="Table in Small Font" value="{!zaapit__zaapit_editable_table2__c.zaapit__useSmallTableFont__c}"/>
         <apex:inputField label="Always Show Checkboxes" value="{!zaapit__zaapit_editable_table2__c.zaapit__showCheckBoxes__c}"/>
         <!-- <apex:inputField label="Hide Confirm When Clicking # of Rows" value="{!zaapit_editable_table2__c.hidePageNumberConfirm__c}"/>
          -->
         <apex:inputField label="Show Mass Update & Inline Edit Buttons" value="{!zaapit__zaapit_editable_table2__c.zaapit__showRegButtons__c}"/>
         
         <apex:inputField label="Show Export (Xls,doc,pdf,csv) on View mode" value="{!zaapit__zaapit_editable_table2__c.zaapit__showExport__c}" />



        <apex:selectList label="Related List Reference Field" value="{!table_ref}" size="1" >
        <apex:selectOption itemValue=" " itemLabel="Please Select"/>
        <apex:selectOptions value="{!availFields}"/>
        </apex:selectList>
        
         <apex:inputField label="Show column filter (texts & numbers & Dates)" value="{!zaapit__zaapit_editable_table2__c.zaapit__Show_column_filter__c}" />
         
         <apex:inputField label="Disable formula-field groupings (on filter)" value="{!zaapit__zaapit_editable_table2__c.zaapit__Disable_formula_fields_groupings__c}" />
         
         <apex:inputField label="Maximum rows for calculating formula-field groupings (textual formula filters)" value="{!zaapit__zaapit_editable_table2__c.zaapit__Max_rows_for_formula_grouping__c}" />
         
         
         
         <apex:inputField label="Hide Action column (Edit&Delete) on read only mode" value="{!zaapit__zaapit_editable_table2__c.zaapit__hideEditDelColumn__c}" />
         <apex:inputField label="Maximum item-per-page selector - footer" value="{!zaapit__zaapit_editable_table2__c.zaapit__maxRowsOnPage__c}" />
         
         <apex:inputField label="Hide Table's Totals Row (footer)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__hideTotalsRow__c}" />
         <apex:inputField label="Exclude Fields From Total (Sepearte with #)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__Exclude_Fields_From_Total__c}" />
         
        <apex:inputField label="Hide Scroll Buttons"  value="{!zaapit__zaapit_editable_table2__c.zaapit__Hide_Scroll_Buttons__c}" />
        
        <apex:inputField label="Open Page on edit mode (default)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__isEdit__c}" />
        
         
         <apex:inputField label="Hide Customize Link from EVERYONE (Revertible from custom settings)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__hideCustomizeLink__c}" />
         
         <apex:inputField label="Hide Multi choice filter (excel style)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__hide_multi_value_filters__c}" />
         
         
          
          <apex:inputField label="Hide instant graph link"  value="{!zaapit__zaapit_editable_table2__c.zaapit__Hide_graph_link_on_filter__c}" />
          <apex:inputField label="Disable Geo-Map for graphs(country graph)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__DisableGeoMaps__c}" />
          
          
          <apex:selectList label="Amount field for graphs (Default: count rows)" value="{!zaapit__zaapit_editable_table2__c.zaapit__Amount_field_For_Graphs__c}" size="1" >
        <apex:selectOption itemValue=" " itemLabel="Please Select"/>
        <apex:selectOptions value="{!availFieldsAmounhts}"/>
        </apex:selectList>
        
        
       <apex:inputField label="Hide New & Delete buttons on edit mode"  value="{!zaapit__zaapit_editable_table2__c.zaapit__hideNewAndDelete__c}" />
       <apex:inputField label="Hide Add-Row button on edit mode"  value="{!zaapit__zaapit_editable_table2__c.zaapit__hideAddRow__c}" />
       
       <apex:inputField label="Open text-area in dialog (in edit mode)"  value="{!zaapit__zaapit_editable_table2__c.zaapit__Open_TextArea_in_a_dialog__c}" />
       
         
     </apex:pageBlockSection>   
     </div>
     
     <apex:pageBlockSection title="Extra Condition Filter" columns="1">   
     </apex:pageBlockSection>
     <span>Append a Field to the Extra Condition Filter: </span>
     <apex:selectList label="Related List Reference Field" styleClass="RLRF" size="1" >
        <apex:selectOption itemValue="" itemLabel="Select a Field"/>
        <apex:selectOptions value="{!availFieldsSort}"/>
        </apex:selectList>  <button onclick="appendToFieldVal('RLRF','RLRF-TA');" type="button" class="btn" style="font-size:13pt;line-height: 13px;vertical-align: -2px;">+</button>
        <button type="button" class="btn" onclick="testQueryx1('RLRF-TA',null)">Check Syntax</button>
    <apex:inputField label="Extra SOQL condition" styleClass="RLRF-TA" style="width:95%;height:50px" value="{!zaapit__zaapit_editable_table2__c.zaapit__extraConditionFilter__c}"/>
      <div style="padding:5px;">Example: amount&gt;0 and quantity=3 and ownerid={UserInfo.UserId}, use the current table's fields with SOQL operations.</div>
      <div style="padding-bottom:5px;padding-left:5px;font-size:8pt;color:#696969">Use {UserInfo.UserId} for the logged-in Userid or use {UserInfo.ProfileId} for the logged-in ProfileId.
      </div>
      <div style="padding:5px;font-size:8pt;color:#696969"> In case of an unexpected/problematic result you can empty this field (named "extraConditionFilter") 
      under setup&gt;custom settings.
      </div>
     
     
    </apex:pageBlock>
     <apex:pageBlock title="Customize View" mode="view" rendered="{!isDone}">
     <apex:pageBlockButtons >
        <apex:commandButton action="{!edit}" value="Edit"/>
      </apex:pageBlockButtons>
     <script>
     $(document).ready(function(){
     closeWinAndRefresh();
     });
     </script>
     </apex:pageBlock>
     
      <apex:actionFunction action="{!tableChanged}" name="tableChanged" reRender="pageBLK,pgBlock1" oncomplete="fixonload();">
      
      </apex:actionFunction>
          
     <apex:actionFunction action="{!save}" name="save1"/>
  </apex:form>
</apex:page>